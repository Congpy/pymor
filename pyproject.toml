# This file is autogenerated. Edit dependencies.py instead
[build-system]
requires = ['setuptools', 'wheel', 'pytest-runner>=2.9', 'packaging']
build-backend = "setuptools.build_meta"

[tool.ruff]
# this makes isort behave nicely
src = ["src"]
line-length = 120
select = ["D", "E", "F", "I", "ICN", "N", "Q", "W"]
ignore = [
    "D10", "D404",
    "D405", "D407", "D410", "D411", "D414", # related to 'parameters'
    "E402", "E731", "E741",
    "F722",
    "N802", "N803", "N806"]
# D10? missing docstring in module, function, method, magic, __init__, public nested class
# D404 First word of the docstring should not be "This"
# D405, D407, D410, D411, D414 The linter thins the argument name 'parameters' is a docstring section
# E402 module level import not at top of file (due to config.require("PKG") syntax)
# E731 do not assign a lambda expression, use a def
# E741 do not use variables named 'l', 'O', or 'I'
# F722 syntax error in forward annotation
# N802 function name should be lowercase
# N803 argument name should be lowercase (we use single capital letters everywhere for vectorarrays)
# N806 same for variables in function

[tool.ruff.flake8-import-conventions]
[tool.ruff.flake8-import-conventions.extend-aliases]
"scipy.linalg" = "spla"

[tool.ruff.flake8-quotes]
inline-quotes = "single"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"src/pymor/algorithms/rules.py" = ["N801", "N805"] # class name CapWords convention, first argument should be `self`
"src/pymor/analyticalproblems/expressions.py" = ["N801"] # class name CapWords convention
"versioneer.py" = ["N801"] # class name CapWords convention
"docs/source/try_on_binder.py" = ["N801"] # class name CapWords convention
"src/pymordemos/*" = ["F403", "F405"] # undefined import due to pymor.basic functionality

[tool.ruff.pycodestyle]
max-doc-length = 100

[tool.ruff.pydocstyle]
convention = "numpy"
