language: python
sudo: required
dist: trusty
os: linux

git:
  depth: 1000
cache:
    pip
notifications:
  email:
    on_success: change
    on_failure: change
branches:
  except:
    - gh-pages
addons:
  apt:
    packages:
    - git
    - xvfb
    - python3-dev
    - python-dev
    - python3-tk
    - python-tk
    - gmsh

env:
  matrix:
  - PYTEST_MARKER="not slow"
  - PYTEST_MARKER="slow"
  - PYTEST_MARKER="PIP_ONLY"
  - PYTEST_MARKER="MPI"

python:
    # system packages enable us to use fenics debs
    - "2.7_with_system_site_packages"
    - "3.4_with_system_site_packages"
    - "3.5"

before_install:
 - export PYTHON_X=python
 - export PY_TEST_X="py.test"
 - export PIP_X=pip
 - sudo add-apt-repository -y ppa:pymor/stable
 # no wheels w/o current pip
 # also trusty's numpy is _way_ slow
 - pip install -U pip numpy
 - |
  # our exp. py3 packages are incompat. with the official repo
  # don't move any debs to addons, having these here makes sure the ppa versions are used
  if [ "${TRAVIS_PYTHON_VERSION}" == "3.4" ] ; then
      export FENICS_PPA="ppa:pymor/fenics-py3"
      export FENICS_PACKAGES="python3-zmq python3-dolfin python3-pyside python3-mpi4py"
  else
      export FENICS_PPA="ppa:fenics-packages/fenics"
      export FENICS_PACKAGES="python-zmq python-dolfin python-pyside python-mpi4py"
  fi
  sudo add-apt-repository -y ${FENICS_PPA}
  sudo aptitude update
  sudo aptitude install -y -q libslepc3.4.2-dev libhdf5-openmpi-dev  ${FENICS_PACKAGES}
 - ${PYTHON_X} -c 'import  dolfin' || echo "import dolfin failed"

install:
 - ${PIP_X} install -r requirements.txt
 - ${PIP_X} install -r requirements-travis.txt
 - ${PIP_X} install -r requirements-optional.txt || echo "Some optional modules failed to install"
 - ${PYTHON_X} setup.py build_ext -i


script:
 - |
  if [ "${PYTEST_MARKER}" == "PIP_ONLY" ] ; then
    export SDIST_DIR=/tmp/pymor_sdist/
    # this fails on PRs, so skip it
    [[ "${TRAVIS_PULL_REQUEST}" != "false" ]] || sudo -E ${PIP_X} -q install git+https://github.com/${TRAVIS_REPO_SLUG}.git@${TRAVIS_COMMIT}
    sudo -E ${PIP_X} uninstall  -y pymor
    ${PYTHON_X} setup.py sdist -d ${SDIST_DIR}/ --format=gztar
    check-manifest -p ${PYTHON_X} ${PWD}
    pushd ${SDIST_DIR}
    sudo -E ${PIP_X} install $(ls ${SDIST_DIR})
    popd
    xvfb-run -a ${PY_TEST_X} --pyargs pymortests -c .installed_pytest.ini -k "not slow"
  elif [ "${PYTEST_MARKER}" == "MPI" ] ; then
    export PYTHONPATH=$(pwd)/src
    xvfb-run -a mpirun -n 2 ${PYTHON_X} src/pymortests/mpi_run_demo_tests.py
  else
    export PYTHONPATH=$(pwd)/src
    # this runs in pytest in a fake, auto numbered, X Server
    xvfb-run -a ${PY_TEST_X} -k "${PYTEST_MARKER}"
  fi

after_success: coveralls

