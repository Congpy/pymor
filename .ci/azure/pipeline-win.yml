jobs:
- job: 'Windows_CI'
  pool:
    vmImage: 'vs2017-win2016'
  timeoutInMinutes: 75
  variables:
      PYMOR_HYPOTHESIS_PROFILE: ci
  strategy:
    matrix:
      Python36:
        python.version: '3.6'
      Python39:
        python.version: '3.9'
    maxParallel: 4

  steps:
  - script: |
        curl -o D:\opengl32.dll.7z --retry 5 --retry-connrefused --retry-delay 30 -v https://pymor.github.io/dist/opengl32.dll.7z
    displayName: download OpenGL Library
  - task: ExtractFiles@1
    inputs:
        archiveFilePatterns: D:\opengl32.dll.7z
        destinationFolder: D:\tmp\
        cleanDestinationFolder: false
  - task: CopyFiles@2
    inputs:
        sourceFolder: D:\tmp\
        contents: 'opengl32.dll*'
        targetFolder: C:\Windows\SysWOW64\mesadrv.dll
        overWrite: true
  - script: |
        REG IMPORT .ci\azure\replace_opengl_imp.reg
        choco install codecov
    displayName: 'Install OpenGL Library'

  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  - script: conda update -n base -c defaults conda
    displayName: Create Anaconda environment
  - script: conda create --yes --name myEnvironment
    displayName: Create Anaconda environment
  - script: |
      call activate myEnvironment
      conda install -v -c conda-forge --yes --name myEnvironment python=$(python.version) numpy pip
    displayName: Conda 1/4
  - script: |
      call activate myEnvironment
      conda install -v -c conda-forge --yes --name myEnvironment --only-deps pymor
    displayName: Conda 2/4
  - script: |
      call activate myEnvironment
      conda install -v -c conda-forge --yes --name myEnvironment pyopengl cython pyevtk slycot cython pytest pytest-cov curl hypothesis pyside2
    displayName: Conda 3/4
  - script: |
      call activate myEnvironment
      conda remove -c conda-forge --yes qtpy qt.py
    displayName: Conda 4/4

  - script: |
      call activate myEnvironment
      python -c "import numpy"
      python -c "import OpenGL.GL as gl; print(gl.glGetString(gl.GL_RENDERER))"
      python -c "import OpenGL.GL as gl; print(gl.glGetString(gl.GL_VERSION))"
      python setup.py build_ext -i
      pip install qt.py==1.3.3 pytest-azurepipelines
      set QT_VERBOSE=1
      set QT_PREFERRED_BINDING=PySide2;PyQt5
      set QT_DEBUG_PLUGINS=1
      python -c "from PySide2.QtWidgets import QApplication, QLabel, QLineEdit; print(QLabel)"
      python -c "import Qt;print(Qt.__binding__)"
    displayName: 'Sanity Checks'


  - script: |
      call activate myEnvironment
      py.test --cov-context=test --junitxml=test_results.xml --cov=src/pymor --hypothesis-profile $(PYMOR_HYPOTHESIS_PROFILE)

  - script: |
      coverage xml
      codecov.exe -f coverage.xml
    displayName: 'Upload to codecov.io'
  - publish: src/pymortests/testdata/check_results/
    artifact: changed_results_win_$(python.version)
    condition: always()
